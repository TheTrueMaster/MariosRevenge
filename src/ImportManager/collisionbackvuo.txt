protected Rectangle getCollision(Rectangle rect1, Rectangle rect2) {
		Area a1 = new Area(rect1);
		Area a2 = new Area(rect2);
		a1.intersect(a2);
		return a1.getBounds();
	}

	/**
	 * Test if a given x/y position of the images contains transparent
	 * pixels or not...
	 * @param x
	 * @param y
	 * @return 
	 */
	protected boolean collision(int x, int y, Entity a, Entity b) {
		boolean collision = false;

		BufferedImage spider = a.getImg();
		BufferedImage fly = b.getImg();
		Rectangle spiderBounds = a.getBounds();
		Rectangle flyBounds = b.getBounds();
		int spiderPixel = spider.getRGB(x - spiderBounds.x, y - spiderBounds.y);
		int flyPixel = fly.getRGB(x - flyBounds.x, y - flyBounds.y);
		// 255 is completely transparent, you might consider using something
		// a little less absolute, like 225, to give you a sligtly
		// higher hit right, for example...
		if (((spiderPixel >> 24) & 0xFF) < 255 && ((flyPixel >> 24) & 0xFF) < 255) {
			collision = true;
		}
		return collision;
	}

